(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
SetDirectory[NotebookDirectory[]]
ClearAll[t]


(* ::Input::Initialization:: *)
initialConds={lake1Vol[0]==2.6239857119877324`*^12};
behaviors={lake1Vol'[t]==lake1inflow[t]-lake1outflow[t]};


(* ::Input::Initialization:: *)
With[{surfacearea =N@QuantityMagnitude[UnitConvert[ Quantity[2085,("Miles")^2],"m^2"]]},
lakeEqns={lake1Height[t]==lake1Vol[t]/surfacearea}];


(* ::Input::Initialization:: *)
inflows={lake1inflow[t]==flow20112012[startDate+Quantity[t,"Days"]]};


(* ::Input::Initialization:: *)
damOutflow[t_]:=80000000
zambeziOutflowFraction = 0.86
damPolicy={lake1outflow[t]==damOutflow[t]/zambeziOutflowFraction};(* m^3/day *)


b`raw=Import["../Data/Bathymetry.asc","Data"];
b`d=ToExpression/@StringSplit[b`raw[[8;;]]];
b`h=AssociationThread@@MapAt[ToExpression,Transpose@StringSplit@b`raw[[;;7]],2];
ArrayPlot[b`d, ImageSize->Full]
GeoGraphics[GeoBoundsRegion[{
{b`h[["yllcorner"]],b`h[["yllcorner"]]+(b`h[["dy"]]*b`h[["nrows"]])},
{b`h[["xllcorner"]],b`h[["xllcorner"]]+(b`h[["dx"]]*b`h[["ncols"]])}
}]]



